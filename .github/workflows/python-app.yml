# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3.13
      uses: actions/setup-python@v3
      with:
        python-version: "3.13"
    - name: Install dependencies
      run: |
        curl -LsSf https://astral.sh/uv/install.sh | sh
        uv sync
    - name: Prepare cifar-10
      run: |
        curl -O https://www.cs.toronto.edu/\~kriz/cifar-10-python.tar.gz
        tar -xzf cifar-10-python.tar.gz -C sota/ExquisiteNetV2/
        cd sota/ExquisiteNetV2
        uv run split.py
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        uv run flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics --exclude .venv
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        uv run flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics --exclude .venv
    - name: Test with pytest
      run: |
        uv run pytest
      env:
        GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
